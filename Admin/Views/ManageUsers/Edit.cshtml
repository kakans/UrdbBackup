@model DbBackupEntities.UserEntity
@{
    ViewBag.Title = "Edit";
}

<h2>Edit</h2>
<div class="panel panel-default">
    <div class="panel-heading"><h4>Add User</h4></div>
    <div class="panel-body">
        <div class="row">
            @using (Html.BeginForm("Edit", "ManageUsers", new { ReturnUrl = ViewBag.ReturnUrl }, FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
            {
                @Html.AntiForgeryToken()
                @Html.ValidationSummary(true)
                <div class="form-group">
                    @Html.LabelFor(m => m.FirstName, new { @class = "col-md-2 control-label" })
                    <div class="col-md-10">
                        @Html.TextBoxFor(m => m.FirstName, new { @class = "form-control" })
                        @Html.ValidationMessageFor(m => m.FirstName)
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(m => m.LastName, new { @class = "col-md-2 control-label" })
                    <div class="col-md-10">
                        @Html.TextBoxFor(m => m.LastName, new { @class = "form-control" })
                        @Html.ValidationMessageFor(m => m.LastName)
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(m => m.UserName, new { @class = "col-md-2 control-label" })
                    <div class="col-md-10">
                        @Html.TextBoxFor(m => m.UserName, new { @class = "form-control" })
                        @Html.ValidationMessageFor(m => m.UserName)
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(m => m.Password, new { @class = "col-md-2 control-label" })
                    <div class="col-md-10">
                        @Html.TextBoxFor(m => m.Password, new { @class = "form-control" })
                        @Html.ValidationMessageFor(m => m.Password)
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(m => m.Group.GroupName, new { @class = "col-md-2 control-label" })
                    <div class="col-md-10">
                        @Html.DropDownListFor(m => m.SelectedGroupId, new SelectList(Model.GroupItems, "Value", "Text"), new { @class = "form-control" })
                        @Html.ValidationMessageFor(m => m.SelectedGroupId)
                    </div>
                </div>
                <div class="form-group">
                    <div class="col-md-10 col-md-offset-2">
                        @Html.CheckBoxFor(m => m.Active)
                        @Html.LabelFor(m => m.Active)
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(m => m.Jobs, new { @class = "col-md-2 control-label" })
                    <div class="col-md-10 col-md-offset-2">
                        @for (var i = 0; i < Model.Jobs.Count(); i++)
                        {
                            <table>
                                <tr>
                                    <td>
                                        @Html.CheckBoxFor(it => it.Jobs[i].IsChecked, new { Style = "vertical-align:3px}" })
                                    </td>
                                    <td>
                                        @Html.HiddenFor(it => it.Jobs[i].Value)
                                        @Html.DisplayFor(it => it.Jobs[i].Text)
                                    </td>
                                </tr>
                            </table>
                        }
                    </div>
                </div>
                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="Update User" class="btn btn-success" />
                        @Html.ActionLink("Cancel", "Index", null, new { @class = "btn btn-danger" })
                    </div>
                </div>
            }
        </div>
    </div>
</div>
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
